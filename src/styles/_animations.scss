@include keyframes(flicker) {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
  100% {
    opacity: 1;
  }
}
@include keyframes(fadein) {
  0% {
    transform: scale3d(0.3, 0.3, 0.3);
    opacity: 0;
  }
  30% {
    transform: scale3d(1.1, 1.1, 1.1);
    opacity: 1;
  }
  100% {
    opacity: 1;
    top: random(1000) + 400 + px;
  }
}
@include keyframes(grinding) {
  0% {
    transform: rotate(-30deg);
  }
  50% {
    right: 10%;

    transform: rotate(60deg);
  }
  100% {
    transform: rotate(-30deg);
  }
}
@include keyframes(moveRandom) {
  0% {
    opacity: 0;
    transform: translateX(random() * 100%);
  }
  10% {
    opacity: 1;

    transform: translateX(random() * 100%);
    bottom: 5vh;
  }
  50% {
    transform: translateX(random() * 100%);
    bottom: 10vh;
  }
  80% {
    transform: translateX(random() * 100%);
  }
  85% {
    transform: translateX(random() * 100%);
    bottom: 8vh;
  }
  95% {
    transform: translateX(random() * 100%);
    bottom: 10vh;
  }
  100% {
    transform: translateX(random() * 100%);
  }
}

@include keyframes(growInSize) {
  0% {
    transform: scale(0.4);
  }
  50% {
    transform: scale(1);
  }
  100% {
    transform: scale(0.4);
  }
}

@include keyframes(rotate) {
  0% {
    transform: rotate(-10deg);
  }
  50% {
    transform: rotate(20deg);
  }
  100% {
    transform: rotate(-10deg);
  }
}

@include keyframes(rotateReverse) {
  0% {
    transform: rotate(10deg);
  }
  50% {
    transform: rotate(-20deg);
  }
  100% {
    transform: rotate(10deg);
  }
}

.strawberries {
  width: 4rem;
  // @include animation("fadein .2s 5");
}

@for $i from 0 through 30 {
  .splatter:nth-child(#{$i}) {
    top: random(1000) + 100 + px;
    left: random(1400) + 100 + px;
    .strawberries {
      animation-duration: 0.5s;
      animation-delay: $i * 0.2 + s;
    }
  }
}

.animate-flicker {
  @include animation("flicker 3s ease-in-out infinite 2s");
  &:nth-child(3n + 1) {
    @include animation("flicker 5s ease-in-out infinite");
  }
  &:nth-child(3n) {
    @include animation("flicker 2s ease infinite");
  }
}

@mixin clipCircle($size) {
  width: $size;
  height: $size;
  clip-path: circle(calc($size/2) at center);
}
@mixin spreadPosition {
  @for $i from 0 through 10 {
    background-image: radial-gradient(
      circle closest-side,
      #fefee5 7%,
      #e3af56 30%,
      transparent
    );

    &:nth-child(#{$i}) {
      left: random(100) / 100 * 100%;
      top: random(100) / 100 * 100%;
    }

    &:nth-child(3n) {
      @include clipCircle(100px);
    }
    &:nth-child(3n + 1) {
      @include clipCircle(40px);
    }
    &:nth-child(3n + 2) {
      @include clipCircle(75px);
    }
  }
}

.myth-lights {
  position: absolute;
  animation: growInSize 5s infinite;
  @include spreadPosition;
}

.blue-gradient {
  background-image: radial-gradient(
    circle closest-side,
    #96b8f0,
    #5a617a,
    transparent,
    #96b8f0
  );
}

.yellow-gradient {
  background-image: radial-gradient(
    circle closest-side,
    #fefee5,
    #e3af56,
    transparent,
    #e3af56
  );
}

.jaws:nth-of-type(odd) {
  width: 60vw !important;
  top: 15% !important;;
  left: 18vw !important;;
  transform-origin: left center;
  @include animation("rotate 20s linear infinite");
}
.jaws:nth-of-type(even) {
  width: 45vw !important;
  top: 60% !important;;
  left: 50vw !important;;
  transform-origin: left center;
  @include animation("rotateReverse 20s linear infinite");
}

.stump {
  max-height: 45vh;
  top: 50%;
  img {
    width: auto !important;
  }
  animation-direction: alternate-reverse;

  @include animation(
    "moveRandom 180s cubic-bezier(0.02, 0.01, 0.21, 1) infinite"
  );
}
.crystal {
  max-height: 35vh;
  top: 40%;
  img {
    left: auto !important;
    right: 16%;
    width: auto !important;
    transform-origin: bottom left;
    @include animation("grinding 25s ease-in-out infinite");
  }
}

#myGermanHeart {
  bottom: 6%;
  left: 0;
  position: absolute;
  opacity: 70%;
}
